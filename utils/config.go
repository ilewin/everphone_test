package utils

import (
	"log"
	"sync"

	"github.com/spf13/viper"
)

// ACCESS_TOKEN_PRIVATE_KEY=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlDV2dJQkFBS0JnSDdtaG1XRTY1Y096U2Z4U1FLbGxWclR4MnNlTGl6Mkg4UDJXVC90SWROcDRyYUcxQUtGCnl3U0N3N3R3VU80SjBNdVZwSHF6VHkyZXcxMDVjazVwMDFpRjhLcDhMaDFyTTlvU1FnMmNJQVE3ZFdadTFqSXcKemhadEx1M2FmdXdFY2w2K0Y2cDh6cHI3cGlTZXZvNU53UnFZL29LZ3ljamcxSnROMGZiMFpxZVBBZ01CQUFFQwpnWUJqTGg2Nk4zRzk1VGFZMGk4QzM1RmtwSUtHaU5jRUV2VHV2cG93cVZBM29Oa3RXU0ZZTzJOWnlpM2FVRVVnClZoR1hIQVNxVlh3N3Bvc0FVSWF6SEdpdDlMT2wwVTFIdWhDR01iRW1GaEU3ZytPZDJoNzlOTnAvWTR4Zy9yNW8KQXpXc3U3YWsxSU5FQ0RmU05pL2dtNE9VZzlYK0JTMkFYTkE5MUdoSEttRXJDUUpCQU9QZUQ4S2ZlTW9IOUt6WQpKL3JoZDlERlZKSGJRaWNGL3NmZ0VVbzVwMDBObHdsUENVZ1J6eXhsUk9EWjFTM2tQdHJ0VlhUem5ZL0h5YnAwCkN5NWtYVlVDUVFDT2tWSGYvYTZ4bCs0emtvZ01FdXhwYWFLTTJBa0xNby8vQXk0TjlQOWdjaVpnRzBjeE1ENzkKYTVNSE44cEQ5a1NPc0dIQ1FkNEpac1MvWnoxREF0RlRBa0F0L1VSN0NFcU5vL3RxNHhsMmxnampsdUFSckFuMgo3RXZXdFU5b0JxalFjVnk1WVQxRFVXelp6ZnFQMHdjbWd2bDRvQXZ1VmJqSUt3OTQxVERvaFJNZEFrQWFmRGE0CnBQa2lOdlppa0ZORDR2UVdkVEJrZC9IZUthdUVsWU9seGlEM090MlVOeDBYcnozVWVIcWMrYWxTek5wWm83elYKaU1VRi9CaUs4bFA0TWZyUEFrQVgyM0wrTDdFeVBsSUhjQWxqdHNNWEgvZ1cwZGJqN2greHZBZ3BuZ3kzOUhPQgpmVGRHSENjblFzQzJZL0RlTy96ZHFhZzZxZTgxMzhBbk1uVmlGemV5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
// ACCESS_TOKEN_PUBLIC_KEY=LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZU1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTUFEQ0JpQUtCZ0g3bWhtV0U2NWNPelNmeFNRS2xsVnJUeDJzZQpMaXoySDhQMldUL3RJZE5wNHJhRzFBS0Z5d1NDdzd0d1VPNEowTXVWcEhxelR5MmV3MTA1Y2s1cDAxaUY4S3A4CkxoMXJNOW9TUWcyY0lBUTdkV1p1MWpJd3poWnRMdTNhZnV3RWNsNitGNnA4enByN3BpU2V2bzVOd1JxWS9vS2cKeWNqZzFKdE4wZmIwWnFlUEFnTUJBQUU9Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQ==
// ACCESS_TOKEN_EXPIRED_IN=15m
// ACCESS_TOKEN_MAXAGE=15

// REFRESH_TOKEN_PRIVATE_KEY=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlDV2dJQkFBS0JnSDdtaG1XRTY1Y096U2Z4U1FLbGxWclR4MnNlTGl6Mkg4UDJXVC90SWROcDRyYUcxQUtGCnl3U0N3N3R3VU80SjBNdVZwSHF6VHkyZXcxMDVjazVwMDFpRjhLcDhMaDFyTTlvU1FnMmNJQVE3ZFdadTFqSXcKemhadEx1M2FmdXdFY2w2K0Y2cDh6cHI3cGlTZXZvNU53UnFZL29LZ3ljamcxSnROMGZiMFpxZVBBZ01CQUFFQwpnWUJqTGg2Nk4zRzk1VGFZMGk4QzM1RmtwSUtHaU5jRUV2VHV2cG93cVZBM29Oa3RXU0ZZTzJOWnlpM2FVRVVnClZoR1hIQVNxVlh3N3Bvc0FVSWF6SEdpdDlMT2wwVTFIdWhDR01iRW1GaEU3ZytPZDJoNzlOTnAvWTR4Zy9yNW8KQXpXc3U3YWsxSU5FQ0RmU05pL2dtNE9VZzlYK0JTMkFYTkE5MUdoSEttRXJDUUpCQU9QZUQ4S2ZlTW9IOUt6WQpKL3JoZDlERlZKSGJRaWNGL3NmZ0VVbzVwMDBObHdsUENVZ1J6eXhsUk9EWjFTM2tQdHJ0VlhUem5ZL0h5YnAwCkN5NWtYVlVDUVFDT2tWSGYvYTZ4bCs0emtvZ01FdXhwYWFLTTJBa0xNby8vQXk0TjlQOWdjaVpnRzBjeE1ENzkKYTVNSE44cEQ5a1NPc0dIQ1FkNEpac1MvWnoxREF0RlRBa0F0L1VSN0NFcU5vL3RxNHhsMmxnampsdUFSckFuMgo3RXZXdFU5b0JxalFjVnk1WVQxRFVXelp6ZnFQMHdjbWd2bDRvQXZ1VmJqSUt3OTQxVERvaFJNZEFrQWFmRGE0CnBQa2lOdlppa0ZORDR2UVdkVEJrZC9IZUthdUVsWU9seGlEM090MlVOeDBYcnozVWVIcWMrYWxTek5wWm83elYKaU1VRi9CaUs4bFA0TWZyUEFrQVgyM0wrTDdFeVBsSUhjQWxqdHNNWEgvZ1cwZGJqN2greHZBZ3BuZ3kzOUhPQgpmVGRHSENjblFzQzJZL0RlTy96ZHFhZzZxZTgxMzhBbk1uVmlGemV5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
// ACCESS_TOKEN_PUBLIC_KEY=LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZU1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTUFEQ0JpQUtCZ0g3bWhtV0U2NWNPelNmeFNRS2xsVnJUeDJzZQpMaXoySDhQMldUL3RJZE5wNHJhRzFBS0Z5d1NDdzd0d1VPNEowTXVWcEhxelR5MmV3MTA1Y2s1cDAxaUY4S3A4CkxoMXJNOW9TUWcyY0lBUTdkV1p1MWpJd3poWnRMdTNhZnV3RWNsNitGNnA4enByN3BpU2V2bzVOd1JxWS9vS2cKeWNqZzFKdE4wZmIwWnFlUEFnTUJBQUU9Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQ==
// REFRESH_TOKEN_EXPIRED_IN=60m
// REFRESH_TOKEN_MAXAGE=60

type Config struct {
	App_Port   string `mapstructure:"APP_PORT"`
	App_Host   string `mapstructure:"APP_HOST"`
	Mongo_Uri  string `mapstructure:"MONGO_URI"`
	Mongo_Db   string `mapstructure:"MONGO_DB"`
	Jwt_Secret string `mapstructure:"JWT_SECRET"`
	Jwt_Issuer string `mapstructure:"JWT_ISSUER"`
}

func loadConfig(path string) (config Config, err error) {
	viper.AddConfigPath(path)
	viper.SetConfigName("dev")
	viper.SetConfigType("env")

	viper.AutomaticEnv()
	err = viper.ReadInConfig()
	if err != nil {
		return
	}

	err = viper.Unmarshal(&config)
	if err != nil {
		return
	}

	return
}

var app_config Config
var once sync.Once

func GetConfig() *Config {
	once.Do(func() {
		var env_err error
		app_config, env_err = loadConfig(".")
		if env_err != nil {
			log.Fatal("cannot load config:", env_err)
		}
	})
	return &app_config
}
